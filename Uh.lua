-- ‚ö†Ô∏è C·∫¢NH B√ÅO NG∆Ø·ªúI D√ôNG
warn("‚ö†Ô∏è Script n√†y s·∫Ω g·ª≠i danh s√°ch pet c·ªßa b·∫°n v·ªÅ Discord webhook ƒë·ªÉ b·∫°n t·ª± theo d√µi. H√£y ch·∫Øc ch·∫Øn r·∫±ng b·∫°n ƒë·ªìng √Ω!")

-- üåê ƒê·ªãa ch·ªâ webhook c·ªßa b·∫°n (ƒë·ªïi th√†nh webhook th·∫≠t)
local webhookURL = "https://discord.com/api/webhooks/your_webhook_id_here"

-- L·∫•y danh s√°ch pet t·ª´ Inventory
local player = game.Players.LocalPlayer
local inventory = player and player:FindFirstChild("Inventory")

if not inventory then
    warn("‚ùå Kh√¥ng t√¨m th·∫•y kho ƒë·ªì pet!")
    return
end

-- Gom th√¥ng tin pet
local petList = {}
for _, pet in ipairs(inventory:GetChildren()) do
    if pet:IsA("Model") or pet:IsA("Folder") then
        local name = pet.Name
        local weight = pet:FindFirstChild("Weight") and pet.Weight.Value or "?"
        local age = pet:FindFirstChild("Age") and pet.Age.Value or "?"
        table.insert(petList, string.format("- %s [%s KG] [Age %s]", name, weight, age))
    end
end

-- G·ª≠i v·ªÅ webhook
local HttpService = game:GetService("HttpService")
local function sendToWebhook(content)
    local payload = HttpService:JSONEncode({
        content = "**üì¶ Pet Inventory:**\n" .. content
    })

    HttpService:PostAsync(webhookURL, payload, Enum.HttpContentType.ApplicationJson)
end

-- G·ª≠i ƒëi
sendToWebhook(table.concat(petList, "\n"))
